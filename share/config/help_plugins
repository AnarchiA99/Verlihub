
--------------------
[--] Manage plugins
--------------------
[-] !addplug <nick> -p <path> [-d desc] -a <autoload (0/1)>	Register new plugin. Nick is a short plugin nickname, path is a relative or absolute path to the plugin's binary, desc is an optional description and autoload set to 1 means that plugin will start with hubsoft
[-] !delplug <nick>	Unregisters the plugin
[-] !lstplug	List the registered plugins
[-] !offplug <nick>	Turns the plugin off
[-] !onplug <nick>	Turns the plugin on
[-] !pluglist all	List all loaded plugins
[-] !plugin <plugin_filename.so>	After you have compiled a plugin, you can use this command to load it. You need to specify the name of the plugin with its extension (.so). You can find all plugins in /usr/local/bin depending on installation prefix. For example to load hublist plugin use !plugin /usr/local/lib/libhublink_pi.so
[-] !plugout <plugin_name>	Unload a plugin use. You need to specify the plugin name that is available using the !pluglist all command. Remember not to include the plugin version
[-] !plugreload <plugin_name>	Reload a plugin. Use always the plugin name
[-] !replug <nick>	Reloads the plugin, turning it off then on
--------------------
[--] Chatroom
--------------------
[-] !addroom <nick> [-CC <country code>] [-ac <min_auto_class>][-AC <max_auto_class>][-c <min_class>][-t <topic>]	Create a chatroom named nick. When specifying the nickname, make sure to respect nickname rules. See below the table for more information regarding the parameters
[-] !delroom <nick>	Removes specified chat room
[-] !lstroom	Lists all available chatrooms
[-] +invite <online_users_nick> <invite message>	Invites a person into the chatroom with an optional invitation message
[-] +leave	User can use this command to leave the room; no messages from the chatroom will be received
[-] +out <nick>	Excludes a user from the chatroom. This command is different from the previous one because can be used by OP to exclude a user from the room
--------------------
[--] Floodprot
--------------------
The plugin does not provide any commands but it will add three new configuration variables:
[-] max_conn_per_ip  represents the maximum number of connection per IP. Set to 1 to allow one IP per user
[-] max_users_per_ip  represents the maximum number of users per IP. Set to 1 to allow one IP per user
[-] bantime_on_flood  number of seconds to ban the flooder
--------------------
[--] Forbid
--------------------
[-] !addforbid <pattern> [-C <max_class>] [-f <flags>] [-r <kick_reason>] Adds a forbidden pattern. See below the table for more information regarding the parameters
[-] !delforbid <pattern>	Deletes forbidden pattern
[-] !modforbid <pattern>	Modifies forbidden pattern. See below the table for more information regarding the parameters
[-] !lstforbid	Lists forbidden patterns
--------------------
[--] Ip log
--------------------
[-] !iplog <ip>	Shows log history for given IP address
[-] !lastip <nick> [ <limit=10>]	Shows last IP addresses for given nickname
[-] !lastnick <ip> [ <limit=10>]	Shows the last nicknames used by the given IP address
[-] !nicklog <nick>	Show log history for given nickname
--------------------
[--] Isp
--------------------
[-] !addisp <iprange> <other_parameters>	Add new ISP. See below the table for more information regarding the parameters
[-] !delisp <ipmin/iprange>	Deletes the given ISP. See below the table for more information regarding the parameters
[-] !modisp <iprange> <other_parameters>	Edit existing ISP. See below the table for more information regarding the parameters
[-] !lstisp	Give a list of ISPs
--------------------
[--] Lua
--------------------
[-] !luaload <script>	Loads specified LUA script using relative path to VerliHub config folder
[-] !luaunload <script / ID>	Unloads specified LUA script using relative path to VerliHub config folder or script ID as proposed with lualist command
[-] !luareload <script / ID>	Reload a script, instead of using !luaunload and then !luaload or script ID as proposed with lualist command
[-] !lualist	Lists loaded LUA scripts
[-] !lualog <enable (0/1)>	Enable or disable LUA debug when you load a new script
[-] !luainfo	Show information about running scripts
[-] !luaversion	Show information about LUA library
--------------------
[--] Messanger
--------------------
[-] +msgip <ip> <topic/subject> <message text>	Sends a message to IP and will be displayed next time they log in
[-] +msgsend <nick> <topic/subject> <message text>	Sends a message to given nickname and will be displayed next time they log in
--------------------
[--] Python
--------------------
[-] !pyload <script>	Loads specified Python script using relative path to VerliHub config folder
[-] !pyunload <script / ID>	Unloads specified Python script using relative path to VerliHub config folder or script ID as proposed with lualist command
[-] !pyreload <script / ID>	Reload a script, instead of using !pyunload and then !pyload or script ID as proposed with lualist command
[-] !pylist	Lists loaded Python scripts
[-] !pylog <enable (0/1)>	Enable or disable Python debug when you load a new script
--------------------
[--] Replacer
--------------------
[-] !addreplacer <word> <replacement word> <level of immunity>	Adds a word replacement. You can specify level of immunity so user with class equal or bigger than to given value will be immune to the word replacement
[-] !delreplacer <word>	Removes an entry
[-] !getreplacer	Lists words to replace
--------------------
[--] Stats
--------------------
[-] No command is available for this plugin. Plugins periodically saves statistics in the database (i.e. users, share, upload, searching, etc...) 
